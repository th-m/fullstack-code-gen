/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/users": {
    get: operations["ScheduleAPI_ListUsers"];
    post: operations["ScheduleAPI_CreateUsers"];
  };
  "/users/{id}": {
    get: operations["ScheduleAPI_GetUsers"];
    delete: operations["ScheduleAPI_DeleteUsers"];
  };
  "/users/{user.id}": {
    put: operations["ScheduleAPI_UpdateUsers"];
  };
}

export interface operations {
  ScheduleAPI_ListUsers: {
    parameters: {
      query: {
        "filters.id"?: string;
        "filters.name"?: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        "application/json": components["schemas"]["usersListUsersResponse"];
      };
      /** An unexpected error response. */
      default: {
        "application/json": components["schemas"]["rpcStatus"];
      };
    };
  };
  ScheduleAPI_CreateUsers: {
    requestBody: {
      "application/json": components["schemas"]["usersCreateUserRequest"];
    };
    responses: {
      /** A successful response. */
      200: {
        "application/json": components["schemas"]["usersUser"];
      };
      /** An unexpected error response. */
      default: {
        "application/json": components["schemas"]["rpcStatus"];
      };
    };
  };
  ScheduleAPI_GetUsers: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        "application/json": components["schemas"]["usersUser"];
      };
      /** An unexpected error response. */
      default: {
        "application/json": components["schemas"]["rpcStatus"];
      };
    };
  };
  ScheduleAPI_DeleteUsers: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** A successful response. */
      200: {
        "application/json": { [key: string]: any };
      };
      /** An unexpected error response. */
      default: {
        "application/json": components["schemas"]["rpcStatus"];
      };
    };
  };
  ScheduleAPI_UpdateUsers: {
    parameters: {
      path: {
        "user.id": string;
      };
    };
    requestBody: {
      "application/json": components["schemas"]["usersUpdateUserRequest"];
    };
    responses: {
      /** A successful response. */
      200: {
        "application/json": components["schemas"]["usersUser"];
      };
      /** An unexpected error response. */
      default: {
        "application/json": components["schemas"]["rpcStatus"];
      };
    };
  };
}

export interface components {
  schemas: {
    protobufAny: {
      typeUrl?: string;
      value?: string;
    };
    rpcStatus: {
      code?: number;
      message?: string;
      details?: components["schemas"]["protobufAny"][];
    };
    usersCreateUserRequest: {
      user?: components["schemas"]["usersUser"];
    };
    usersListUsersResponse: {
      events?: components["schemas"]["usersUser"][];
    };
    usersUpdateUserRequest: {
      user?: components["schemas"]["usersUser"];
    };
    /** This is a person who uses my app */
    usersUser: {
      id?: string;
      name?: string;
    };
  };
}
